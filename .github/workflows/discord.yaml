name: Discord Bot Build

on:
  push:
    branches: ["main"]
    paths: ["discord/**"]

env:
  DOCKER_REPOSITORY: ssouthcity/nogard-bot

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"

      - name: Build application
        working-directory: ./discord
        run: go build

      - name: Run tests
        working-directory: ./discord
        run: go test ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          context: ./discord
          push: true
          tags: ${{ env.DOCKER_REPOSITORY }}:${{ github.sha }},${{ env.DOCKER_REPOSITORY }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_REPOSITORY }}:latest
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Download kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 main-cluster

      - name: Update Image
        run: kubectl --namespace=nogard set image deployment/nogard nogard=${{ env.DOCKER_REPOSITORY }}:${{ github.sha }}
